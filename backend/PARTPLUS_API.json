{
  "openapi": "3.0.0",
  "info": {
    "title": "Part Plus API",
    "description": "API para la gestión de clientes y reservaciones en Part Plus.",
    "contact": {
      "email": "soporte@partplus.com"
    },
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://virtserver.swaggerhub.com/ricaldone-6b5/PARTPLUS/1.0.0",
      "description": "SwaggerHub API Auto Mocking"
    },
    {
      "url": "http://localhost:3000/api",
      "description": "Servidor local de desarrollo"
    }
  ],
  "tags": [
    {
      "name": "Clients",
      "description": "Operaciones relacionadas con los clientes"
    },
    {
      "name": "Reservations",
      "description": "Operaciones relacionadas con las reservaciones"
    }
  ],
  "paths": {
    "/clients": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Obtener todos los clientes",
        "responses": {
          "200": {
            "description": "Lista de clientes",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Client"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Clients"
        ],
        "summary": "Registrar un nuevo cliente",
        "requestBody": {
          "description": "Datos del nuevo cliente",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Cliente registrado correctamente"
          },
          "400": {
            "description": "Error en la solicitud"
          }
        }
      }
    },
    "/clients/{id}": {
      "get": {
        "tags": [
          "Clients"
        ],
        "summary": "Obtener cliente por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID del cliente",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Datos del cliente",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Client"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Cliente no encontrado"
          }
        }
      },
      "put": {
        "tags": [
          "Clients"
        ],
        "summary": "Actualizar cliente por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ClientInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Cliente actualizado correctamente"
          },
          "400": {
            "description": "Datos inválidos"
          },
          "404": {
            "description": "Cliente no encontrado"
          }
        }
      },
      "delete": {
        "tags": [
          "Clients"
        ],
        "summary": "Eliminar cliente por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Cliente eliminado correctamente"
          },
          "404": {
            "description": "Cliente no encontrado"
          }
        }
      }
    },
    "/reservations": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Obtener todas las reservaciones",
        "responses": {
          "200": {
            "description": "Lista de reservaciones",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Reservation"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Reservations"
        ],
        "summary": "Registrar una nueva reservación",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "201": {
            "description": "Reservación registrada"
          },
          "400": {
            "description": "Datos inválidos"
          }
        }
      }
    },
    "/reservations/{id}": {
      "get": {
        "tags": [
          "Reservations"
        ],
        "summary": "Obtener reservación por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Detalles de la reservación",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Reservation"
                }
              }
            }
          },
          "400": {
            "description": "ID inválido"
          },
          "404": {
            "description": "Reservación no encontrada"
          }
        }
      },
      "put": {
        "tags": [
          "Reservations"
        ],
        "summary": "Actualizar reservación por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ReservationInput"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Reservación actualizada correctamente"
          },
          "400": {
            "description": "Datos inválidos"
          },
          "404": {
            "description": "Reservación no encontrada"
          }
        }
      },
      "delete": {
        "tags": [
          "Reservations"
        ],
        "summary": "Eliminar reservación por ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Reservación eliminada correctamente"
          },
          "404": {
            "description": "Reservación no encontrada"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Client": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64a16e1f492b2c001f94e3d2"
          },
          "name": {
            "type": "string",
            "example": "Juan Pérez"
          },
          "email": {
            "type": "string",
            "example": "juan@example.com"
          },
          "phone": {
            "type": "string",
            "example": "7777-8888"
          },
          "age": {
            "type": "integer",
            "example": 30
          }
        }
      },
      "ClientInput": {
        "required": [
          "age",
          "email",
          "name",
          "password",
          "phone"
        ],
        "type": "object",
        "properties": {
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string"
          },
          "password": {
            "type": "string"
          },
          "age": {
            "type": "integer"
          },
          "phone": {
            "type": "string"
          }
        }
      },
      "Reservation": {
        "type": "object",
        "properties": {
          "_id": {
            "type": "string",
            "example": "64a17e1a492b2c001f94f3c3"
          },
          "clientId": {
            "type": "string",
            "example": "64a16e1f492b2c001f94e3d2"
          },
          "vehicle": {
            "type": "string",
            "example": "Toyota Corolla 2020"
          },
          "service": {
            "type": "string",
            "example": "Cambio de aceite"
          },
          "status": {
            "type": "string",
            "example": "Pendiente"
          }
        }
      },
      "ReservationInput": {
        "required": [
          "clientId",
          "service",
          "status",
          "vehicle"
        ],
        "type": "object",
        "properties": {
          "clientId": {
            "type": "string"
          },
          "vehicle": {
            "type": "string"
          },
          "service": {
            "type": "string"
          },
          "status": {
            "type": "string"
          }
        }
      }
    }
  }
}